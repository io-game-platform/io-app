server {
    server_name    io.binaryaura.net;
    root           /var/www/io.binaryaura.net/build;
    # Load configuration files for the default server block.
    include /etc/nginx/default.d/*.conf;

    # Blocked files and directories

    location ~ /.git/.* {
        deny all;
	return 404;
    }

    location ~ /admin.* {
        deny all;
	return 404;
    }    

    location /README.md {
    	return 404;    
    }

    location /api {
    	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header Upgrade http_upgrade;
	proxy_set_header Connection 'upgrade';
	proxy_set_header Host $host;
	proxy_cache_bypass $http_upgrade;
	rewrite ^/api/?(.*) /$1 break;
	proxy_pass http://localhost:8081;
	proxy_redirect off;
    }

    location / {
        if ($request_uri ~ ^/(.*)\.html$) {
            return 302 /$1;
        }

        try_files $uri /index.html;
        autoindex on;
    }

    # Error Pages

    error_page 404 /404.html;
        location = /40x.html {
    }

    error_page 500 502 503 504 /50x.html;
        location = /50x.html {
    }


    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/io.binaryaura.net/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/io.binaryaura.net/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}
server {
    if ($host = io.binaryaura.net) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    server_name    io.binaryaura.net;
    listen 80;
    return 404; # managed by Certbot


}
